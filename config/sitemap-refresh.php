<?php

use Spatie\Sitemap\Tags\Url;

return [

    /**
     * A list of url to ignore
     * These are hard coded
     * Each url does not have to be exhaustive
     *
     * For example, if you want to ignore all routes
     * of the backoffice group
     * just add 'bo' into this table
     *
     * * Note that this can take route names (both partially or full)
     * * You can use a wild card just as for routeIs method
     */
    'ignoreRoutes' => [
        'back.*',
        'bo.*',
        'front.frame',
        'cspReportUri',
    ],

    /**
     * This should be filled using the command `php artisan sitemap:install-completer`
     *
     * 'completeWith' => [CLASS, 'METHOD'],
     * eg : 'completeWith' => [CompleteSitemapWith::class, 'append'],
     *
     *  This should point to a static method which will be called with the folowing parameter
     * (Kwaadpepper\SitemapRefresh\Lib\Sitemap $sitemap)
     *
     * You may now use $sitemap->addLinks('route.myRouteName', string[] $links)
     */
    'completeWith' => null,

    /**
     * The default route frequency to use with sitemap refresh
     */
    'routeDefaultFrequency' => Url::CHANGE_FREQUENCY_DAILY,

    /**
     * The default route priority to use with sitemap refresh
     *
     * priority should be a number between 0 and 1
     * https://www.sitemaps.org/protocol.html
     */
    'routeDefaultPriority' => 0.5,

    /**
     * Frequencies for routes
     * use the full or partial route name as index
     * and a frequency within \Spatie\Sitemap\Tags\Url constants
     *
     * eg: 'engagments.*' => \Spatie\Sitemap\Tags\Url::CHANGE_FREQUENCY_HOURLY
     */
    'routeFrequencies' => [],

    /**
     * Priorities for routes
     * use the full or partial route name as index
     * and a priority in 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, and 0.0.
     *
     * 1.0 is the Highest
     *
     * eg: 'engagments.*' => 1.0
     */
    'routePriorities' => [],

    /**
     * Enable or disable schedule for the job
     * If set to true the sitemap refresh will be run
     * using the 'cron' instruction
     */
    'schedule' => true,

    /**
     * If you want to set specific
     * instruction for when to schedule job
     * you can set this with a cron instruction
     * You can generate one using https://crontab.guru/
     *
     * schedule must be set to true
     *
     * Default is every day at 15:45
     */
    'cron' => '45 15 * * *',

    /**
     * The sitemap refresh can execute JavaScript on each page so it will
     * discover links that are generated by your JS scripts. This feature
     * is powered by headless Chrome.
     *
     * ! This needs pupetter installed with npm : npm i puppeteer  (not to put in dev dependencies)
     */
    'executeJavascript' => true,
];
